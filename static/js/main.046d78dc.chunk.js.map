{"version":3,"sources":["images/weather-icons/01d.svg","images/weather-icons/01n.svg","images/weather-icons/02d.svg","images/weather-icons/02n.svg","images/weather-icons/03d.svg","images/weather-icons/03n.svg","images/weather-icons/04d.svg","images/weather-icons/04n.svg","images/weather-icons/09d.svg","images/weather-icons/09n.svg","images/weather-icons/10d.svg","images/weather-icons/10n.svg","images/weather-icons/11d.svg","images/weather-icons/11n.svg","images/weather-icons/13d.svg","images/weather-icons/13n.svg","images/weather-icons/50d.svg","images/weather-icons/50n.svg","images/pattern.svg","Components/Header/styles.js","Components/SearchBar/styles.js","api.js","history.js","Actions/index.js","Actions/types.js","Components/SearchBar/SearchBar.js","Components/Header/Header.js","Components/Home/styles.js","Components/Home/Home.js","Components/Forecasts/styles.js","Utils/index.js","Components/Forecasts/Forecasts.js","Components/WeatherDetails/styles.js","Components/WeatherDetails/WeatherDetail.js","App.js","Reducers/weatherReducer.js","Root/reducers.js","Root/store.js","index.js"],"names":["module","exports","Nav","styled","div","Brand","h1","Globalstyle","createGlobalStyle","Container","Form","form","props","row","Input","input","err","Button","button","axios","create","baseURL","createBrowserHistory","fetchDataErr","type","payload","SearchBar","useState","city","setCity","dispatch","useDispatch","error","useSelector","state","weather","onSubmit","e","preventDefault","a","weatherApi","get","params","q","appid","response","data","list","name","history","push","getData","console","log","getCurrentWeather","onChange","target","value","placeholder","Header","data-test","to","style","textDecoration","PatternBackground","Title","Home","City","Card","CardItem","CardImg","img","CardDesc","toCelcius","kel","Math","round","weatherImg","term","SVG1d","SVG1n","SVG2d","SVG2n","SVG3d","SVG3n","SVG4d","SVG4n","SVG9d","SVG9n","SVG10d","SVG10n","SVG11d","SVG11n","SVG13d","SVG13n","SVG50d","SVG50n","Forecasts","forecast","current","loading","distinct","Set","map","dt_txt","slice","date","moment","format","index","id","dist","icon","src","description","main","temp","humidity","pressure","item","key","alt","Day","WeatherDetail","day","match","filteredList","filter","dt","temp_min","temp_max","App","path","exact","component","Weather","WeatherForecast","initialState","combineReducers","action","middlewares","thunk","createLogger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.046d78dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/01d.d37bc50c.svg\";","module.exports = __webpack_public_path__ + \"static/media/01n.bd386a65.svg\";","module.exports = __webpack_public_path__ + \"static/media/02d.6caa54b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/02n.01549e46.svg\";","module.exports = __webpack_public_path__ + \"static/media/03d.85f34bb2.svg\";","module.exports = __webpack_public_path__ + \"static/media/03n.a8ffe7ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/04d.d0ca9a39.svg\";","module.exports = __webpack_public_path__ + \"static/media/04n.a8ffe7ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/09d.d83471c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/09n.910e1057.svg\";","module.exports = __webpack_public_path__ + \"static/media/10d.c50bf3e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/10n.45a86be0.svg\";","module.exports = __webpack_public_path__ + \"static/media/11d.bc6f153e.svg\";","module.exports = __webpack_public_path__ + \"static/media/11n.12c7ad8f.svg\";","module.exports = __webpack_public_path__ + \"static/media/13d.79f6eb03.svg\";","module.exports = __webpack_public_path__ + \"static/media/13n.ea38d2f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/50d.f1aae715.svg\";","module.exports = __webpack_public_path__ + \"static/media/50n.dc59f73d.svg\";","module.exports = __webpack_public_path__ + \"static/media/pattern.e78b5615.svg\";","import styled, { createGlobalStyle } from \"styled-components\";\n\nexport const Nav = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 80px;\n  background-color: rgb(250, 105, 77);\n`;\n\nexport const Brand = styled.h1`\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 500;\n  color: white;\n  margin-left: 10px;\n  font-size: 30px;\n  @media (max-width: 500px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Globalstyle = createGlobalStyle`\n  body {\n   margin: 0; \n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-flow: ${props => (props.row ? \"row\" : \"column\")};\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  width: 140px;\n  height: 30px;\n  border-radius: 4px;\n  padding: 6px 12px;\n  font-size: 14px;\n  border: 2px solid;\n  border-color: ${props => (props.err ? \"#ff0000\" : \"#ccc\")};\n  border-radius: 4px;\n  ::placeholder {\n    color: ${props => (props.err ? \"#ff0000\" : \"#ccc\")};\n  }\n`;\n\nexport const Button = styled.button`\n  color: #fff;\n  background-color: #5cb85c;\n  border-color: #4cae4c;\n  padding: 6px 12px;\n  margin: 10px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.42857143;\n  text-align: center;\n  cursor: pointer;\n  border: 1px solid transparent;\n  border-radius: 4px;\n`;\n","import axios from \"axios\";\n\nconst KEY = \"bcf9d23e76dcc63bc158942ceea4c302\";\n\nexport default axios.create({\n  baseURL: \"https://api.openweathermap.org/\"\n});\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import {\n  FETCH_WEATHER,\n  //FETCH_DETAILS,\n  FETCH_WEATHER_ERROR,\n  FETCH_NAME,\n  LOADING,\n  FETCH_DETAILS\n  //FILTER_DAY\n  //FILTER_HOUR\n} from \"./types\";\nimport weatherApi from \"./../api\";\nimport history from \"./../history\";\n//import moment from \"moment\";\n\nconst fetchDataSuccess = data => ({\n  type: FETCH_WEATHER,\n  payload: data\n});\n\nconst fetchDataErr = err => ({\n  type: FETCH_WEATHER_ERROR,\n  payload: err\n});\n\nconst fetchName = name => ({\n  type: FETCH_NAME,\n  payload: name\n});\n\nconst loading = () => ({\n  type: LOADING\n});\n\nconst fetchDetailSuccess = data => ({\n  type: FETCH_DETAILS,\n  payload: data\n});\n\nexport const getData = city => async dispatch => {\n  dispatch(loading());\n  try {\n    const response = await weatherApi.get(\"/data/2.5/forecast\", {\n      params: {\n        q: city,\n        appid: \"bcf9d23e76dcc63bc158942ceea4c302\"\n      }\n    });\n    // console.log(\"response\", response.data.list);\n    dispatch(fetchDataSuccess(response.data.list));\n    dispatch(fetchName(response.data.city.name));\n    history.push(\"/weather\");\n  } catch (e) {\n    dispatch(fetchDataErr(\"City/State not found!\"));\n  }\n};\n\nexport const getCurrentWeather = city => async dispatch => {\n  try {\n    const response = await weatherApi.get(\"/data/2.5/weather\", {\n      params: {\n        q: city,\n        appid: \"bcf9d23e76dcc63bc158942ceea4c302\"\n      }\n    });\n    console.log(\"response\", response);\n    dispatch(fetchDetailSuccess(response.data));\n    history.push(\"/weather\");\n  } catch (e) {\n    dispatch(fetchDataErr(\"City/State not found!\"));\n  }\n};\n\n// export const filterByDay = () => (dispatch, getState) => {\n//   const { forecast } = getState().weather;\n//   const distinct = [\n//     ...new Set(forecast && forecast.map(data => data.dt_txt.slice(0, 10)))\n//   ];\n//   const convertDate = distinct.map(e => moment(e).format(\"dddd, MMMM Do\"));\n//   const date = convertDate.map((value, index) => ({\n//     id: index + 1,\n//     dist: distinct[index], // same index to ref distinct array and length is same\n//     date: value\n//   }));\n//   console.log(\"klkjn\", forecast);\n//   dispatch(filterDay(date));\n// };\n","export const FETCH_WEATHER = \"FETCH_WEATHER\";\nexport const FETCH_DETAILS = \"FETCH_DETAILS\";\nexport const FETCH_WEATHER_ERROR = \"FETCH_WEATHER_ERROR\";\nexport const FETCH_NAME = \"FETCH_NAME\";\nexport const FILTER_DAY = \"FILTER_DAY\";\nexport const FILTER_HOUR = \"FILTER_HOUR\";\nexport const LOADING = \"LOADING\";\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Input, Container, Button, Form } from \"./styles\";\nimport { getData, getCurrentWeather } from \"./../../Actions/index\";\n\nconst SearchBar = props => {\n  const { row } = props;\n  const [city, setCity] = useState(\"\");\n  const dispatch = useDispatch();\n  const error = useSelector(state => state.weather.error);\n\n  const handleClick = e => {\n    e.preventDefault();\n    dispatch(getData(city));\n    dispatch(getCurrentWeather(city));\n    setCity(\"\");\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleClick} row={row}>\n        <Input\n          onChange={e => setCity(e.target.value)}\n          placeholder={`${error ? error : \"St. George, Utah\"}`}\n          value={city}\n          err={error}\n        />\n        {/* {error ? <Error>{error}</Error> : null} */}\n        <Button>Get Weather</Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Nav, Brand, Globalstyle } from \"./styles\";\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nconst Header = () => {\n  return (\n    <Nav data-test=\"header\">\n      <Globalstyle />\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n        <Brand data-test=\"logo\"> My Weather App </Brand>\n      </Link>\n      <SearchBar row />\n    </Nav>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\nimport PatternBackground from \"./../../images/pattern.svg\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  background-image: url(${PatternBackground});\n  height: 100vh;\n  background-size: cover;\n`;\n\nexport const Title = styled.h1`\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 100;\n  color: white;\n  font-size: 38px;\n`;\n","import React from \"react\";\nimport SearchBar from \"./../SearchBar/SearchBar\";\nimport { Title, Container } from \"./styles\";\n\nconst Home = () => {\n  return (\n    <Container>\n      <Title>Enter a City and State</Title>\n      <SearchBar />\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const City = styled.div`\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 100;\n  display: flex;\n  justify-content: center;\n  align-item: center;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-evenly;\n  align-items: flex-end;\n  padding: 20px 80px 20px 80px;\n`;\n\nexport const CardItem = styled.div`\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 100;\n  display: flex;\n  color: black;\n  font-size: 15px;\n\n  width: ${props => (props.row ? \"500px\" : \"\")};\n  align-items: center;\n  justify-content: ${props => (props.row ? \"space-evenly\" : \"center\")};\n  flex-direction: ${props => (props.row ? \"row\" : \"column\")};\n  padding: 30px;\n  border-radius: 8px;\n\n  &:hover {\n    ${props =>\n      props.row ? \"\" : \"box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2)\"};\n  }\n`;\n\nexport const CardImg = styled.img`\n  height: ${props => (props.row ? \"180px\" : \"100px\")};\n  width: ${props => (props.row ? \"180px\" : \"100px\")};\n`;\n\nexport const CardDesc = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 50px;\n`;\n","import {\n  SVG1d,\n  SVG1n,\n  SVG2d,\n  SVG2n,\n  SVG3d,\n  SVG3n,\n  SVG4d,\n  SVG4n,\n  SVG9d,\n  SVG9n,\n  SVG10d,\n  SVG10n,\n  SVG11d,\n  SVG11n,\n  SVG13d,\n  SVG13n,\n  SVG50d,\n  SVG50n\n} from \"../images/index\";\n\nexport const toCelcius = kel => {\n  const temp = Math.round(kel - 273.15);\n  return temp;\n};\n\nexport const weatherImg = term => {\n  switch (term) {\n    case \"01d\":\n      return SVG1d;\n    case \"01n\":\n      return SVG1n;\n    case \"02d\":\n      return SVG2d;\n    case \"02n\":\n      return SVG2n;\n    case \"03d\":\n      return SVG3d;\n    case \"03n\":\n      return SVG3n;\n    case \"04d\":\n      return SVG4d;\n    case \"04n\":\n      return SVG4n;\n    case \"09d\":\n      return SVG9d;\n    case \"09n\":\n      return SVG9n;\n    case \"10d\":\n      return SVG10d;\n    case \"10n\":\n      return SVG10n;\n    case \"11d\":\n      return SVG11d;\n    case \"11n\":\n      return SVG11n;\n    case \"13d\":\n      return SVG13d;\n    case \"13n\":\n      return SVG13n;\n    case \"50d\":\n      return SVG50d;\n    case \"50n\":\n      return SVG50n;\n    default:\n      return null;\n  }\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { SVG1d } from \"./../../images/index\";\nimport { Card, CardItem, CardImg, City, CardDesc } from \"./styles\";\nimport { toCelcius, weatherImg } from \"./../../Utils\";\n\nconst Forecasts = () => {\n  const list = useSelector(state => state.weather.forecast);\n  const city = useSelector(state => state.weather.city);\n  const current = useSelector(state => state.weather.current);\n  const loading = useSelector(state => state.weather.loading);\n\n  const distinct = [...new Set(list.map(data => data.dt_txt.slice(0, 10)))];\n  const convertDate = distinct.map(e => moment(e).format(\"dddd, MMMM Do\"));\n  const date = convertDate.map((value, index) => ({\n    id: index + 1,\n    dist: distinct[index], // same index to ref distinct array and length is same\n    date: value\n  }));\n\n  const icon = weatherImg(current.weather && current.weather[0].icon);\n\n  return (\n    <>\n      <City>{loading ? <h1>loading...</h1> : <h1>{city}</h1>}</City>\n      <Card>\n        <CardItem row>\n          <CardImg src={icon} row />\n          <CardDesc>\n            <p>{current.weather && current.weather[0].description}</p>\n            <p>temp: {toCelcius(current.main && current.main.temp)}°C</p>\n            <p>Humidity: {current.main && current.main.humidity}</p>\n            <p>Pressure: {current.main && current.main.pressure}</p>\n          </CardDesc>\n        </CardItem>\n      </Card>\n      <City>\n        <h1>Days</h1>\n      </City>\n      <Card>\n        {date.map(item => {\n          return (\n            <Link\n              to={`/forecast/${item.dist}`}\n              style={{ textDecoration: \"none\" }}\n              key={item.id}\n            >\n              <CardItem key={item.id}>\n                <CardImg src={SVG1d} alt=\"sun\" />\n                <h3>{item.date}</h3>\n              </CardItem>\n            </Link>\n          );\n        })}\n      </Card>\n    </>\n  );\n};\n\nexport default Forecasts;\n","import styled from \"styled-components\";\n\nexport const Container = styled.h1`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Day = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 100;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-evenly;\n  align-items: flex-end;\n  height: 500px;\n  padding: 20px 80px 20px 80px;\n`;\n\nexport const CardItem = styled.div`\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 100;\n  color: black;\n  font-size: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: 30px;\n  border-radius: 8px;\n  &:hover {\n    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n  }\n  }\n`;\n\nexport const CardImg = styled.img`\n  height: 100px;\n  width: 100px;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { Card, CardItem, CardImg, Day } from \"./styles\";\nimport { weatherImg } from \"../../Utils/index\";\nimport { toCelcius } from \"./../../Utils\";\n\nconst WeatherDetail = props => {\n  const day = props.match.params.id;\n  const list = useSelector(state => state.weather.forecast);\n  const city = useSelector(state => state.weather.city);\n  const filteredList = list.filter(item => item.dt_txt.match(`${day}`));\n\n  return (\n    <>\n      <Day>\n        <h1>{city}</h1>\n        <h2>{moment(day).format(\"dddd, MMMM Do\")}</h2>\n      </Day>\n      <Card>\n        {filteredList.map(item => {\n          const icon = weatherImg(item.weather[0].icon);\n          return (\n            <CardItem key={item.dt}>\n              <CardImg src={icon} alt=\"weather icon\" />\n              <h3>{item.dt_txt.slice(11, 16)}</h3>\n              <p>{item.weather[0].description}</p>\n              <p>Min temp: {toCelcius(item.main.temp_min)}°C</p>\n              <p>Max temp: {toCelcius(item.main.temp_max)}°C</p>\n              <p>Humidity: {item.main.humidity}</p>\n            </CardItem>\n          );\n        })}\n      </Card>\n    </>\n  );\n};\n\nexport default WeatherDetail;\n","import React from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport Home from \"./Components/Home/Home\";\nimport Weather from \"./Components/Forecasts/Forecasts\";\nimport WeatherForecast from \"./Components/WeatherDetails/WeatherDetail\";\nimport { Router, Route } from \"react-router-dom\";\nimport history from \"./history\";\n\nconst App = () => {\n  return (\n    <div>\n      <Router history={history}>\n        <div>\n          <Header />\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/weather\" exact component={Weather} />\n          <Route path=\"/forecast/:id\" exact component={WeatherForecast} />\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  FETCH_WEATHER,\n  LOADING,\n  FETCH_WEATHER_ERROR,\n  FETCH_NAME,\n  FETCH_DETAILS\n} from \"./../Actions/types\";\n\nconst initialState = {\n  forecast: [],\n  current: {},\n  city: \"\",\n  loading: false,\n  error: \"\"\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOADING:\n      return { ...state, loading: true };\n    case FETCH_WEATHER:\n      console.log(\"FETCH_WEATHER SUCCESS!\");\n      return { ...state, forecast: action.payload, error: \"\", loading: false };\n    case FETCH_WEATHER_ERROR:\n      return { ...state, error: action.payload, loading: false };\n    case FETCH_NAME:\n      console.log(\"FETCH_NAME SUCCESS\");\n      return { ...state, city: action.payload };\n    case FETCH_DETAILS:\n      console.log(\"FETCH_DETAILS SUCCESS\");\n      return { ...state, current: action.payload, loading: false, error: \"\" };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport weather from \"../Reducers/weatherReducer\";\n\nexport default combineReducers({\n  weather\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nconst middlewares = [thunk];\n\nmiddlewares.push(createLogger());\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Root/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}